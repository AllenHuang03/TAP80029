name: Deploy Flask App

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest  # Ensure pytest is installed

      - name: Run tests
        run: pytest tests/

  deploy:
    needs: test # Ensures deployment happens only if tests pass
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install Heroku CLI
      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install-ubuntu.sh | sh
          echo "âœ… Heroku CLI installed"

      # Authenticate with Heroku using API key
      - name: Authenticate with Heroku
        run: |
          echo "machine api.heroku.com
          login ${{ secrets.HEROKU_EMAIL }}
          password ${{ secrets.HEROKU_API_KEY }}" > ~/.netrc

          echo "machine git.heroku.com
          login ${{ secrets.HEROKU_EMAIL }}
          password ${{ secrets.HEROKU_API_KEY }}" >> ~/.netrc

          chmod 600 ~/.netrc
          echo "âœ… Heroku authentication successful"

      # Ensure Heroku remote is set up correctly
      - name: Set Heroku Git Remote
        run: |
          git remote add heroku https://git.heroku.com/${{ secrets.HEROKU_APP_NAME }}.git || true
          git remote set-url heroku https://git.heroku.com/${{ secrets.HEROKU_APP_NAME }}.git
          echo "âœ… Heroku remote set"

      # Push to Heroku only if the branch is 'main'
      - name: Deploy to Heroku
        run: |
          git push heroku main --force
          echo "ðŸš€ Deployment to Heroku completed"
